name: Test and Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      trigger_source:
        description: "Source that triggered this workflow"
        required: false
        default: "manual"
        type: string

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, 1.89]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show trigger source
        run: |
          echo "Triggered by: ${{ github.event.inputs.trigger_source || 'direct' }}"
          echo "Workflow: ${{ github.workflow }}"

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Install just
        uses: taiki-e/install-action@just

      - name: Verify just installation
        run: just --version

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin@0.32.8

      - name: Run tests
        run: cargo test --all-features

      - name: Generate coverage report
        run: cargo tarpaulin --out Xml --output-dir coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
